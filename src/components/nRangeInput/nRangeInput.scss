@import 'sxcss';

.n-range-input {
  --fillDot: rgb(58, 58, 58);
  --fillRange: rgb(128, 128, 128);
  --fillBg: rgb(231, 231, 231);
  --fillOutput: rgb(231, 231, 231);
  --outputFontColor: #fff;
  $transitionTime: 0.3s;

  @mixin range-input-track {
    @include size(100%);
    background: none; /* get rid of Firefox track background */
  }

  @mixin range-input-thumb {
    border: calc(0.5 * var(--r)) solid transparent;
    border-radius: 50%;
    width: var(--d);
    height: var(--h);
    background-color: var(--fillDot);
    pointer-events: auto;
    box-sizing: border-box;
  }

  /* fix too small font-size in both Chrome & Firefox */
  * {
    --hl: 0;
    --nothl: calc(1 - var(--hl));
    margin: 0;
    font-size: inherit;
  }

  .n-range-input__wrap {
    --d: var(--h);
    --r: calc(0.5 * var(--d));
    --uw: calc(var(--w) - var(--d));
    --dif: calc(var(--max) - var(--min));

    display: grid;
    grid-template-rows: max-content var(--h) max-content;
    // grid-gap: 0.625em;
    width: var(--w);
    overflow: visible;

    &::before,
    &::after {
      grid-column: 1;
      grid-row: 2;
      border-radius: var(--r);
      background-color: var(--fillBg);
      content: '';
    }

    &::after {
      /* non-standard WebKit version */
      -webkit-mask: var(--fill);
      -webkit-mask-composite: xor;

      /* standard version, supported in Firefox */
      mask: var(--fill);
      mask-composite: exclude;
      background-color: var(--fillRange);
      @include transition(
        $property: filter,
        $duration: $transitionTime,
        $timing-function: ease-out
      );
    }

    &:focus-within {
      --hl: 1;
    }
  }

  .n-range-input__sr-only {
    position: absolute;
    clip-path: inset(50%);
  }

  input[type='range'] {
    &::-webkit-slider-runnable-track,
    &::-webkit-slider-thumb,
    & {
      -webkit-appearance: none;
    }

    @include grid($column: 1, $row: 2);
    top: 0;
    left: 0;
    z-index: calc(1 + var(--hl));
    background: none; /* get rid of white Chrome background */
    cursor: grab;
    pointer-events: none;

    &::-webkit-slider-runnable-track,
    &::-moz-range-track  {
      @include range-input-track;
    }

    &::-webkit-slider-thumb {
      @include range-input-thumb;
    }

    &::-moz-range-thumb {
      @include range-input-thumb;
    }

    &:focus {
      outline: solid 0 transparent;

      &,
      & + output {
        --hl: 1;
      }
    }

    &:active {
      cursor: grabbing;
    }
  }

  output {
    grid-column: 1;
    grid-row: 3;
    margin-left: var(--r);
    width: max-content;
    transform: translate(
      calc((var(--c) - var(--min)) / var(--dif) * var(--uw))
    );
    position: relative;
    bottom: 0;

    &::after {
      position: absolute;
      display: block;
      border-radius: 5px;
      padding: 0 0.375em 0 0.375em;
      background-color: var(--fillOutput);
      color: var(--outputFontColor);
      @include transition(
        $property: transform,
        $duration: $transitionTime,
        $timing-function: ease-out
      );
      content: counter(c);
      counter-reset: c var(--c);
      transform: translate(-50%) scale(var(--hl));
    }
  }
}
