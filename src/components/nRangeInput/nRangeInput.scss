@import "sxcss";

[nui-namespace="nui"].range-input {
    --fillDot: rgb(58, 58, 58);
    --fillRange: rgb(128, 128, 128);
    --fillBg: rgb(231, 231, 231);
    --outputFontColor: #fff;
    $transitionTime: 0.3s;
    $outputPadding: 2em;

    @mixin track() {
        @include size($x: 100%, $y: 100%);
        @include background(none); /* get rid of Firefox track background */
    }

    @mixin thumb() {
        @include border($style: solid, $width: calc(0.5 * var(--r)), $color: transparent, $radius: 50%);
        @include size($x: var(--d), $y: var(--h));
        @include background(var(--fillDot));
        @include pointer-events(auto);
        box-sizing: border-box;
    }

    /* fix too small font-size in both Chrome & Firefox */
    * {
        --hl: 0;
        --nothl: calc(1 - var(--hl));
        @include margin($margin: 0);
        @include font($size: inherit);
    }

    .range-input__wrap {
        --d: var(--h);
        --r: calc(0.5 * var(--d));
        --uw: calc(var(--w) - var(--d));
        --dif: calc(var(--max) - var(--min));

        @include grid($template-rows: max-content var(--h) max-content, $gap: 0.625em);
        @include padding($y: 0, $x: $outputPadding);
        @include size($x: var(--w));
        overflow: hidden;

        &::before,
        &::after {
            @include grid($column: 1, $row: 2);
            @include border($radius: var(--r));
            @include background(var(--fillBg));
            @include content("");
        }

        &::after {
            /* non-standard WebKit version */
            -webkit-mask: var(--fill);
            -webkit-mask-composite: xor;

            /* standard version, supported in Firefox */
            mask: var(--fill);
            mask-composite: exclude;

            @include background(var(--fillRange));
            @include transition($property: filter, $duration: $transitionTime, $timing-function: ease-out);
        }

        &:focus-within {
            --hl: 1;
        }
    }

    .range-input__sr-only {
        @include position($position: absolute);
        @include clip-path(inset(50%));
    }

    input[type="range"] {
        &::-webkit-slider-runnable-track,
        &::-webkit-slider-thumb,
        & {
            -webkit-appearance: none;
        }

        @include grid($column: 1, $row: 2);
        @include position($top: 0, $left: 0, $z-index: calc(1 + var(--hl)));
        @include background(none); /* get rid of white Chrome background */
        @include cursor(grab);
        @include pointer-events(none);

        &::-webkit-slider-runnable-track {
            @include track;
        }
        &::-moz-range-track {
            @include track;
        }

        &::-webkit-slider-thumb {
            @include thumb;
        }
        &::-moz-range-thumb {
            @include thumb;
        }

        &:focus {
            @include outline(solid 0 transparent);

            &,
            & + output {
                --hl: 1;
            }
        }

        &:active {
            @include cursor(grabbing);
        }
    }

    output {
        @include grid($column: 1, $row: 3);
        @include margin($left: var(--r));
        @include size($x: max-content);
        transform: translate(calc((var(--c) - var(--min)) / var(--dif) * var(--uw)));

        &::after {
            @include display(block);
            @include border($radius: 5px);
            @include padding($y: 0, $x: 0.375em);
            @include background(var(--fillDot));
            @include color(var(--outputFontColor));
            @include transition($property: transform, $duration: $transitionTime, $timing-function: ease-out);
            @include content(counter(c));
            counter-reset: c var(--c);
            transform: translate(-50%) scale(var(--hl));
        }
    }
}
