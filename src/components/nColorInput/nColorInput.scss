@import '../../styles/mixins/forms.scss';

[nui-namespace="nui"] {

  &.color-input {
    @include form-item(
      $form-element: 'input[type="text"]',
      $alerts-classname: '.color-input__alerts',
      $gap: var(--gap),
      $color-valid: var(--color-valid),
      $color-invalid: var(--color-invalid)
    );
    grid-template-columns: repeat(2, auto);
    // column-gap: 0 !important;

    input[type="text"] {
      @include input-box(
        $height: var(--height),
        $width: var(--width),
        $padding: var(--padding)
      );
      grid-row: 2/3;
      grid-column: 2/3;
      transform: translate(calc(var(--outline-width) * -1));

      &:valid + input[type="color"] {
        outline-color: var(--color-valid);
      }

      &:invalid + input[type="color"] {
        outline-color: var(--color-invalid);
      }

      &:not(:focus):required:invalid {
        outline-color: var(--color-invalid);
      }

      &:not(:focus):required:invalid ~ .color-input__alerts {
        display: inherit;
      }
    }

    input[type="color"] {
      grid-row: 2/3;
      grid-column: 1/2;
      height: var(--height);
      width: var(--height);
      padding: 0;
      margin: 0;
      appearance: none;
      border: none;
      outline: var(--outline-width) solid;
      outline-offset: calc(var(--outline-width) * -1);

      & + input[type="text"] {
        outline-color: var(--color-valid);
      }
    }

    label {
      grid-column: 1/3;
      &[disabled="disabled"],
      &:disabled {
        opacity: .3;
      }
    }
  }

  .color-input__alerts {
    grid-row: 3/4;
    grid-column: 1/4;
  }
}
